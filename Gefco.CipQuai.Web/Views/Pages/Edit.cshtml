@using Gefco.CipQuai.Web.Models
@model Gefco.CipQuai.Web.Models.PageViewModel

@{
    ViewBag.PageIcon = "feather icon-layers";
    ViewBag.Title = "Edit page [" + Model.Name + "]";
    ViewBag.PageStory = "Here you can edit your page";
    Layout = "~/Views/Shared/_AuthLayout.cshtml";

}

@section breadcrumb
{
    <li class="breadcrumb-item"><a href="@Url.Action("Index")">Pages</a> </li>
    <li class="breadcrumb-item"><a href="#!">@ViewBag.Title</a> </li>
}
<div class="row">
    <div class="col-md-12 col-xl-9">
        <div class="card">
            <div class="card-header">
                <h5>Page info</h5>
            </div>
            <div class="card-block">


                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group row">
                        <label class="control-label col-md-2" for="@nameof(Model.SectionId)">Section</label>
                        <div class="col-md-10">
                            @Html.DropDownList("SectionId", null, htmlAttributes: new { @class = "form-control" })

                            @*@Html.EditorFor(model => model.Section, new {htmlAttributes = new {@class = "form-control"}})*@
                            @Html.ValidationMessageFor(model => model.SectionId, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="control-label col-md-2" for="@nameof(Model.Name)">Title</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="control-label col-md-2" for="@nameof(Model.Link)">Link</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Link, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Link, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="control-label col-md-2" for="@nameof(Model.Icon)">Icon</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Icon, new { htmlAttributes = new { @class = "form-control col-lg-4" } })
                            @Html.ValidationMessageFor(model => model.Icon, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="control-label col-md-2" for="@nameof(Model.MenuTag)">MenuTag</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.MenuTag, new { htmlAttributes = new { @class = "form-control col-lg-4" } })
                            @Html.ValidationMessageFor(model => model.MenuTag, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="control-label col-md-2" for="@nameof(Model.SortOrder)">Display order</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.SortOrder, new { htmlAttributes = new { @class = "form-control col-1" } })
                            @Html.ValidationMessageFor(model => model.SortOrder, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-2"></div>
                        <div class="col-md-10">
                            <button type="button" class="btn btn-danger" onclick="javascript:window.location = '@Url.Action("Index")'">Return to list</button>
                            <input type="submit" value="Save" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
                }

            </div>
        </div>
    </div>
    <div class="col-md-12 col-xl-3">
        <div class="card table-card">
            <div class="card-header f-w-700 ffq">
                Page roles
            </div>
            <div class="card-block">
                <div class="table-responsive">
                    <table class="table">
                        <tbody>
                        @{
                            using (var db = new ApplicationDbContext())
                            {
                                foreach (var role in db.Roles.ToList())
                                {
                                    var isInRole = Model.Roles.Any(p => p.Role.Id == role.Id);
                                    <tr>
                                        <td class="pr-0">
                                            <div class="checkbox-fade fade-in-primary">
                                                <label>
                                                    <input type="checkbox" value="@role.Id" @(isInRole ? "checked" : "") onchange="toggleRole(this)">
                                                    <span class="cr"><i class="cr-icon icofont icofont-verification-check txt-primary"></i></span>
                                                    @role.Name
                                                </label>
                                            </div>
                                        </td>
                                    </tr>

                                }
                            }
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


@section scripts
{
    <script>
        $("#menu-admin-pages").addClass("active");
        function toggleRole(e) {
            let input = $(e);
            $.post('@Url.Action("ToggleRole")', { roleId: input.val(), pageId: '@Model.Id', isInRole: input.prop('checked') }, () => { window.location = window.location });
        }
    </script>

}