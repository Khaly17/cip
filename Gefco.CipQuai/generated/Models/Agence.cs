// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Gefco.CipQuai.ApiClient.Models
{
    /// <summary> The Agence. </summary>
    public partial class Agence
    {
        /// <summary> Initializes a new instance of Agence. </summary>
        /// <param name="name"></param>
        /// <param name="id"></param>
        /// <param name="creationDate"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> or <paramref name="id"/> is null. </exception>
        public Agence(string name, string id, DateTimeOffset creationDate)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }
            if (id == null)
            {
                throw new ArgumentNullException(nameof(id));
            }

            DeclarationBonnePratiques = new ChangeTrackingList<DeclarationBonnePratique>();
            Name = name;
            Id = id;
            CreationDate = creationDate;
        }

        /// <summary> Initializes a new instance of Agence. </summary>
        /// <param name="isUnderWatch"></param>
        /// <param name="agenceType"></param>
        /// <param name="otherName"></param>
        /// <param name="declarationBonnePratiques"></param>
        /// <param name="name"></param>
        /// <param name="id"></param>
        /// <param name="creationDate"></param>
        internal Agence(bool? isUnderWatch, AgenceType agenceType, string otherName, IList<DeclarationBonnePratique> declarationBonnePratiques, string name, string id, DateTimeOffset creationDate)
        {
            IsUnderWatch = isUnderWatch;
            AgenceType = agenceType;
            OtherName = otherName;
            DeclarationBonnePratiques = declarationBonnePratiques;
            Name = name;
            Id = id;
            CreationDate = creationDate;
        }

        /// <summary> Gets or sets the is under watch. </summary>
        public bool? IsUnderWatch { get; set; }
        /// <summary> Gets or sets the agence type. </summary>
        public AgenceType AgenceType { get; set; }
        /// <summary> Gets or sets the other name. </summary>
        public string OtherName { get; set; }
        /// <summary> Gets the declaration bonne pratiques. </summary>
        public IList<DeclarationBonnePratique> DeclarationBonnePratiques { get; }
        /// <summary> Gets or sets the name. </summary>
        public string Name { get; set; }
        /// <summary> Gets or sets the id. </summary>
        public string Id { get; set; }
        /// <summary> Gets or sets the creation date. </summary>
        public DateTimeOffset CreationDate { get; set; }
    }
}
