// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using System.Xml.Linq;
using Azure.Core;

namespace Gefco.CipQuai.ApiClient.Models
{
    public partial class IdentityUserLogin
    {
        internal static IdentityUserLogin DeserializeIdentityUserLogin(JsonElement element)
        {
            Optional<string> loginProvider = default;
            Optional<string> providerKey = default;
            Optional<string> userId = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("LoginProvider"))
                {
                    loginProvider = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("ProviderKey"))
                {
                    providerKey = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("UserId"))
                {
                    userId = property.Value.GetString();
                    continue;
                }
            }
            return new IdentityUserLogin(loginProvider.Value, providerKey.Value, userId.Value);
        }

        internal static IdentityUserLogin DeserializeIdentityUserLogin(XElement element)
        {
            string loginProvider = default;
            string providerKey = default;
            string userId = default;
            if (element.Element("LoginProvider") is XElement loginProviderElement)
            {
                loginProvider = (string)loginProviderElement;
            }
            if (element.Element("ProviderKey") is XElement providerKeyElement)
            {
                providerKey = (string)providerKeyElement;
            }
            if (element.Element("UserId") is XElement userIdElement)
            {
                userId = (string)userIdElement;
            }
            return new IdentityUserLogin(loginProvider, providerKey, userId);
        }
    }
}
