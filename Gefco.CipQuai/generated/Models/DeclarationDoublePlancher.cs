// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Gefco.CipQuai.ApiClient.Models
{
    /// <summary> The DeclarationDoublePlancher. </summary>
    public partial class DeclarationDoublePlancher
    {
        /// <summary> Initializes a new instance of DeclarationDoublePlancher. </summary>
        /// <param name="id"></param>
        /// <param name="creationDate"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/> is null. </exception>
        public DeclarationDoublePlancher(string id, DateTimeOffset creationDate)
        {
            if (id == null)
            {
                throw new ArgumentNullException(nameof(id));
            }

            MotifDps = new ChangeTrackingList<MotifDP>();
            Pictures = new ChangeTrackingList<Picture>();
            Id = id;
            CreationDate = creationDate;
        }

        /// <summary> Initializes a new instance of DeclarationDoublePlancher. </summary>
        /// <param name="isDPUsed"></param>
        /// <param name="motifDps"></param>
        /// <param name="autreMotifDP"></param>
        /// <param name="nbDPCassEs"></param>
        /// <param name="isCr"></param>
        /// <param name="traction"></param>
        /// <param name="tractionId"></param>
        /// <param name="remorque"></param>
        /// <param name="currentStatus"></param>
        /// <param name="currentStatusId"></param>
        /// <param name="currentWorkflowStep"></param>
        /// <param name="autreAgenceArrivee"></param>
        /// <param name="pictures"></param>
        /// <param name="id"></param>
        /// <param name="creationDate"></param>
        internal DeclarationDoublePlancher(bool? isDPUsed, IList<MotifDP> motifDps, string autreMotifDP, int? nbDPCassEs, bool? isCr, Traction traction, string tractionId, Remorque remorque, RemorqueStatus currentStatus, string currentStatusId, int? currentWorkflowStep, string autreAgenceArrivee, IList<Picture> pictures, string id, DateTimeOffset creationDate)
        {
            IsDPUsed = isDPUsed;
            MotifDps = motifDps;
            AutreMotifDP = autreMotifDP;
            NbDPCassEs = nbDPCassEs;
            IsCr = isCr;
            Traction = traction;
            TractionId = tractionId;
            Remorque = remorque;
            CurrentStatus = currentStatus;
            CurrentStatusId = currentStatusId;
            CurrentWorkflowStep = currentWorkflowStep;
            AutreAgenceArrivee = autreAgenceArrivee;
            Pictures = pictures;
            Id = id;
            CreationDate = creationDate;
        }

        /// <summary> Gets or sets the is dp used. </summary>
        public bool? IsDPUsed { get; set; }
        /// <summary> Gets the motif dps. </summary>
        public IList<MotifDP> MotifDps { get; }
        /// <summary> Gets or sets the autre motif dp. </summary>
        public string AutreMotifDP { get; set; }
        /// <summary> Gets or sets the nb dp cass es. </summary>
        public int? NbDPCassEs { get; set; }
        /// <summary> Gets or sets the is cr. </summary>
        public bool? IsCr { get; set; }
        /// <summary> Gets or sets the traction. </summary>
        public Traction Traction { get; set; }
        /// <summary> Gets or sets the traction id. </summary>
        public string TractionId { get; set; }
        /// <summary> Gets or sets the remorque. </summary>
        public Remorque Remorque { get; set; }
        /// <summary> Gets or sets the current status. </summary>
        public RemorqueStatus CurrentStatus { get; set; }
        /// <summary> Gets or sets the current status id. </summary>
        public string CurrentStatusId { get; set; }
        /// <summary> Gets or sets the current workflow step. </summary>
        public int? CurrentWorkflowStep { get; set; }
        /// <summary> Gets or sets the autre agence arrivee. </summary>
        public string AutreAgenceArrivee { get; set; }
        /// <summary> Gets the pictures. </summary>
        public IList<Picture> Pictures { get; }
        /// <summary> Gets or sets the id. </summary>
        public string Id { get; set; }
        /// <summary> Gets or sets the creation date. </summary>
        public DateTimeOffset CreationDate { get; set; }
    }
}
