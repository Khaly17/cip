// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using System.Xml.Linq;
using Azure.Core;

namespace Gefco.CipQuai.ApiClient.Models
{
    public partial class UserServiceResult
    {
        internal static UserServiceResult DeserializeUserServiceResult(JsonElement element)
        {
            Optional<ApplicationUser> value = default;
            Optional<string> errorCode = default;
            Optional<bool> isSuccess = default;
            Optional<string> errorMessage = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("Value"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    value = ApplicationUser.DeserializeApplicationUser(property.Value);
                    continue;
                }
                if (property.NameEquals("ErrorCode"))
                {
                    errorCode = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("IsSuccess"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    isSuccess = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("ErrorMessage"))
                {
                    errorMessage = property.Value.GetString();
                    continue;
                }
            }
            return new UserServiceResult(value.Value, errorCode.Value, Optional.ToNullable(isSuccess), errorMessage.Value);
        }

        internal static UserServiceResult DeserializeUserServiceResult(XElement element)
        {
            ApplicationUser value = default;
            string errorCode = default;
            bool? isSuccess = default;
            string errorMessage = default;
            if (element.Element("Value") is XElement valueElement)
            {
                value = ApplicationUser.DeserializeApplicationUser(valueElement);
            }
            if (element.Element("ErrorCode") is XElement errorCodeElement)
            {
                errorCode = (string)errorCodeElement;
            }
            if (element.Element("IsSuccess") is XElement isSuccessElement)
            {
                isSuccess = (bool?)isSuccessElement;
            }
            if (element.Element("ErrorMessage") is XElement errorMessageElement)
            {
                errorMessage = (string)errorMessageElement;
            }
            return new UserServiceResult(value, errorCode, isSuccess, errorMessage);
        }
    }
}
