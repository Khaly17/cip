// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Gefco.CipQuai.ApiClient.Models
{
    /// <summary> The DeclarationNonConformite. </summary>
    public partial class DeclarationNonConformite
    {
        /// <summary> Initializes a new instance of DeclarationNonConformite. </summary>
        /// <param name="id"></param>
        /// <param name="creationDate"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/> is null. </exception>
        public DeclarationNonConformite(string id, DateTimeOffset creationDate)
        {
            if (id == null)
            {
                throw new ArgumentNullException(nameof(id));
            }

            MotifNCs = new ChangeTrackingList<MotifNC>();
            Pictures = new ChangeTrackingList<Picture>();
            Id = id;
            CreationDate = creationDate;
        }

        /// <summary> Gets or sets the agence concern e. </summary>
        public Agence AgenceConcernE { get; set; }
        /// <summary> Gets or sets the current workflow step. </summary>
        public int? CurrentWorkflowStep { get; set; }
        /// <summary> Gets the motif n cs. </summary>
        public IList<MotifNC> MotifNCs { get; }
        /// <summary> Gets or sets the autre motif nc. </summary>
        public string AutreMotifNC { get; set; }
        /// <summary> Gets or sets the num voyage. </summary>
        public string NumVoyage { get; set; }
        /// <summary> Gets the pictures. </summary>
        public IList<Picture> Pictures { get; }
        /// <summary> Gets or sets the current status. </summary>
        public DeclarationNcStatus CurrentStatus { get; set; }
        /// <summary> Gets or sets the current status id. </summary>
        public string CurrentStatusId { get; set; }
        /// <summary> Gets the id. </summary>
        public string Id { get; }
        /// <summary> Gets the creation date. </summary>
        public DateTimeOffset CreationDate { get; }
    }
}
