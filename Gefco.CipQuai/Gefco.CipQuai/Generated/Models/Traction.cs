// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Gefco.CipQuai.ApiClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class Traction
    {
        /// <summary>
        /// Initializes a new instance of the Traction class.
        /// </summary>
        public Traction()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Traction class.
        /// </summary>
        public Traction(string name, string id, System.DateTime creationDate, Agence agenceDepart = default(Agence), Agence agenceArrivee = default(Agence), string numeroBorderau = default(string), string idVoyage = default(string), System.DateTime dueDate = default(System.DateTime), bool? isCreated = default(bool?), bool? isCancelled = default(bool?), string cancelReason = default(string))
        {
            AgenceDepart = agenceDepart;
            AgenceArrivee = agenceArrivee;
            NumeroBorderau = numeroBorderau;
            IdVoyage = idVoyage;
            DueDate = dueDate;
            IsCreated = isCreated;
            IsCancelled = isCancelled;
            CancelReason = cancelReason;
            Name = name;
            Id = id;
            CreationDate = creationDate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AgenceDepart")]
        public Agence AgenceDepart { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AgenceArrivee")]
        public Agence AgenceArrivee { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "NumeroBorderau")]
        public string NumeroBorderau { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IdVoyage")]
        public string IdVoyage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DueDate")]
        public System.DateTime DueDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsCreated")]
        public bool? IsCreated { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsCancelled")]
        public bool? IsCancelled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CancelReason")]
        public string CancelReason { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CreationDate")]
        public System.DateTime CreationDate { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Id == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Id");
            }
            if (AgenceDepart != null)
            {
                AgenceDepart.Validate();
            }
            if (AgenceArrivee != null)
            {
                AgenceArrivee.Validate();
            }
        }
    }
}
