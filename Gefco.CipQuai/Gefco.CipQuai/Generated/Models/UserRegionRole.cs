// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Gefco.CipQuai.ApiClient.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class UserRegionRole
    {
        /// <summary>
        /// Initializes a new instance of the UserRegionRole class.
        /// </summary>
        public UserRegionRole()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UserRegionRole class.
        /// </summary>
        public UserRegionRole(string id = default(string), string userId = default(string), int? regionRoleId = default(int?), string regionId = default(string), ApplicationUser user = default(ApplicationUser), RegionRole regionRole = default(RegionRole), Region region = default(Region))
        {
            Id = id;
            UserId = userId;
            RegionRoleId = regionRoleId;
            RegionId = regionId;
            User = user;
            RegionRole = regionRole;
            Region = region;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "User_Id")]
        public string UserId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "RegionRole_Id")]
        public int? RegionRoleId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Region_Id")]
        public string RegionId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "User")]
        public ApplicationUser User { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "RegionRole")]
        public RegionRole RegionRole { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Region")]
        public Region Region { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (User != null)
            {
                User.Validate();
            }
            if (Region != null)
            {
                Region.Validate();
            }
        }
    }
}
